"""migrate_db

迁移 ID: ad582aba56b2
父迁移: c163ff4e5f5e
创建时间: 2024-02-12 13:33:17.491874

"""

from __future__ import annotations

import pathlib
from collections.abc import Sequence
from contextlib import suppress

from alembic import op
from sqlalchemy import insert
from sqlalchemy.ext.automap import automap_base
from sqlalchemy.orm import Session

revision: str = "ad582aba56b2"
down_revision: str | Sequence[str] | None = "c163ff4e5f5e"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade(name: str) -> None:
    with suppress(KeyError):
        globals()[f"upgrade_{name}"]()


def downgrade(name: str) -> None:
    with suppress(KeyError):
        globals()[f"downgrade_{name}"]()


def upgrade_() -> None:
    try:
        from peewee import Model, SqliteDatabase, TextField
    except ImportError:
        return

    db_path = pathlib.Path("data/maimai_prober/database.sqlite")
    if not db_path.exists():
        return

    db = SqliteDatabase(db_path)

    class User(Model):
        imid = TextField(primary_key=True)
        maimai_id = TextField(null=True)
        token = TextField(null=True)

        class Meta:
            database = db

    users = User.select()

    bulk_insert_users = []
    for user in users:
        bulk_insert_users.append(
            {"user_id": user.imid, "friend_id": user.maimai_id, "df_token": user.token}
        )
    sess = Session(op.get_bind())
    Base = automap_base()
    Base.prepare(autoload_with=op.get_bind())
    NewUser = Base.classes.maimai_updater_user
    sess.execute(insert(NewUser), bulk_insert_users)


def downgrade_() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###
